# GitHub Action to publish to PyPI on version tags
# - Triggers on tags like v0.0.2
# - Checks that the tag matches the version in pyproject.toml
# - Publishes to PyPI if they match

name: Publish Python üêç distribution üì¶ to PyPI on tag

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Extract version from tag
        id: get_tag
        run: |
          echo "::set-output name=tag_version::${GITHUB_REF#refs/tags/v}"

      - name: Extract version from pyproject.toml
        id: get_pyproject_version
        run: |
          PYPROJECT_VERSION=$(grep '^version =' pyproject.toml | sed -E "s/version = \"([^\"]+)\"/\1/")
          echo "::set-output name=pyproject_version::$PYPROJECT_VERSION"

      - name: Check tag matches pyproject.toml version
        run: |
          if [ "${{ steps.get_tag.outputs.tag_version }}" != "${{ steps.get_pyproject_version.outputs.pyproject_version }}" ]; then
            echo "Tag version ${{ steps.get_tag.outputs.tag_version }} does not match pyproject.toml version ${{ steps.get_pyproject_version.outputs.pyproject_version }}"
            exit 1
          fi

      - name: Build package
        run: python -m build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_tag.outputs.tag_version }}
          name: Release v${{ steps.get_tag.outputs.tag_version }}
          generate_release_notes: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
